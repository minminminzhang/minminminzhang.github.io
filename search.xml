<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[搭建个人博客]]></title>
    <url>%2F2018%2Fcjlrslbh30000gonu4sh2iyys%2F</url>
    <content type="text"><![CDATA[​ 对于一个认真的程序员，在学习过程中总要写Blog来记录学习过程中的点点滴滴。踩过的坑终将变成成功道路上的跳板。 Hexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown解析文章，在几秒内，即可利用靓丽的主题生成静态网页。经过搜索资料，不断学习，请教别人，最终搭建好了我的个人博客框架，在此写下整个过程分享。博文包括三个部分：构建基本框架、不断优化、补充内容。 ​ 构建基本框架：从最简单的相关软件介绍到搭建完成属于自己的独立博客。不断优化：在完成简单的搭建之后，不断美化自己的页面展示。补充内容包括了Hexo的语法以及。。。。。。。 构建基本框架： 基础准备：&nbsp; &nbsp; &nbsp; &nbsp;安装Git&nbsp; &nbsp; &nbsp; &nbsp;将本地的Hexo提交到GitHub上进行管理&nbsp; &nbsp; &nbsp; &nbsp;安装步骤：&nbsp; &nbsp; &nbsp; &nbsp;1.在Git官网上(https://git-scm.com/download/win) 下载Windows版本。&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;2.下载完成后，双击.msi文件安装至G:\blogresoft\git。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 安装NodeJs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hexo是基于NodeJs环境的静态博客，里面的npm工具很有用。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装步骤：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.在Node.js官网(https://nodejs.org/en) 下载最新版本。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.点击最新64位的8.11.4LTS版本下载到G盘新建的blogresoft文件夹下。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3：双击.msi文件安装，不断点击next即可安装成功至G:\blogresoft\nodejs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GitHub账号&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 没有GitHub账号的情况下,在官网页面注册一个新的即可。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 配置SSH Keys&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 配置SSH Keys 之后,每次对自己的博客改动之后，提交的时候,不再需要重新输入GitHub的账号的密码了。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;配置步骤:在 G:\blogresoft\git文件夹下点击git-bash.exe，输入以下命令检查.ssh文件是否已经存在： 1$ ls -al ~/.ssh 不存在会出现提示： ls: cannot access ‘/c/User/Administrator/ .ssh’:No such file or directory 接着执行如下代码，生成.ssh文件夹： 1$ mkdir .ssh 进入.ssh文件夹： 1$ cd .ssh 输入如下代码： 123$ ssh-keygen -t rsa -C&quot;GitHub登陆邮箱&quot;$ id_rsa 按回车键，提示是否使用长密码，按回车，继续按回车，不使用&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将ssh公钥部分添加到GitHub，.ssh文件夹下后缀名为.pub的文件是公钥，右键打开方式选择写字板打开，复制其中所有的内容。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在GitHub网站右上角点击setting。点击左侧SSH and GPG keys，点击右上角New SSH key，在Key中粘贴.ssh文件夹下后缀名为.pub的文件的所有内容，点击Add SSH key添加公钥，此时公钥状态为黑色。 在G:\blogresoft\git文件夹下双击git-bash.exe，输入以下命令： 123$ git config --global user.name &quot;usename&quot;$ git config --global user.email &quot;email&quot; 其中usename为注册GitHub时的账户名，email为注册GitHub时的邮箱。 输入如下命令，测试SSH是否配置成功： 1$ ssh -T git@github.com 出现提示，输入yes回车，出现欢迎提示: Hi minminminzhang! Your’ve successfully authenticated,but GitHub does not provide shell access. 此时回到SSH and GPG keys处，公钥状态变为绿色。 新建仓库​ 在Git上新建一个仓库 在GitHub上新建一个仓库，并取名为your_username.github.io，其中your_username是您自己的GitHub账号名。 在本地写博客 在G:/blogresoft/git文件夹下新建一个index.html文件，并输入一下内容： 12345678&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;你好！这是我的第一篇博客&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; 用Git把index.html提交到GitHub上，在cmd中输入以下命令： 123456789$ git init $ git add index.html $ git commit -m &quot;我的第一篇博客&quot;$ git remote add originhttps://github.com/your_username/your_username.github$ git push -u origin master 在浏览器中输入your_username.github.io即可访问文件。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。 hexo安装配置：*下载Hexo 下载官网： http://hexo.io github: https://github.com/hexojs/hexo 在G:/blogresoft/git文件夹下双击git-bash.exe 输入以下命令进行安装Hexo 1$ npm install -g hexo 在G:/blogresoft/git下安装文件夹hexo，并切换至Hexo工作目录 1$ cd hexo 初始化文件夹 1$ hexo init 安装hexo的扩展插件 1$ npm install 安装其他插件 1234$ npm install hexo-deployer-git -save$ npm install hexo-renderer-ejs -save$ npm install hexo-renderer-stylus -save$ npm install hexo-render-marked -save 生成静态页面 1$ hexo g 开启本地服务器 1$ hexo s 会出现提示： INFO Start processing INFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop 此时：访问http://localhost:4000就可以看到刚刚创建的博客了。注意：若是无法访问，说明端口4000被占用了。可以输入如下的命令换端口试一下： 1$ hexo s -p 5000 更换后，访问http://localhost:5000进行查看。 *部署Hexo： 修改配置 修改站点配置文件G:/blogresoft/git/hexo/_config.yml,修改deploy项的内容： 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:type: gitrepo: git@github.com:username/username.github.io.gitbranch: master 注意：1.hexo有2种_config.yml文件，一个是根目录下的全局的_config.yml，称为站点配置文件，一个是各个theme下的，称为主题配置文件； 2.type: repo: branch:分别和后面的内容之间有分隔输入下面的命令将Hexo博客部署到GitHub中： 清空静态页面 1$ hexo clean 生成静态页面 123$ hexo g$ npm install hexo -deployer-git -save 部署 1$ hexo d 在完成之后就可以访问https://minminminzhang.github.io,出现Hexo安装成功的页面提示。注意：我在最后一部配置的时候出现了仓库不存在的提示：出现这种错误，有两种原因： 1.修改站点文件时：仓库名输入有误 2.在部署之前没有执行$ npm install hexo -deployer-git -save还有一种错误的情况由G:/blogresoft/git/hexo下的.deploy_git隐藏文件所致,删除这个隐藏文件即可。完成之后进行重新部署： 12345$ hexo clean$ hexo g$ hexo d 重新访问进行验证。 不断优化更换主题 Hexo中G:/blogresoft/git/hexo/themes/landscape默认的主题很简陋，我们可以换成更美观的。本博客选择Next主题，简单美观，好配置。 下载主题： 在Next发布页面(https://github.com/iissnan/hexo-theme-next/releases) 下载最新版本hexo-theme-next-5.1.4。放在G:/blogresoft/git/hexo/themes文件夹下并改名为next。启用主题打开站点配置文件，在theme字段更改如下代码： 1theme： next 主题安装完成，在切换之前，用hexo clean来清除hexo的缓存。 验证主题： 启动Hexo本地站点，并开启调试模式： 1$ hexo s -debug 出现提示：INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop 此时使用浏览器访问http://localhost:4000，检查Next安装是否成功。Next安装成功之后的页面设置参考： https://blog.csdn.net/u012195214/article/details/79204088 写博客：定位到hexo根目录，执行命令： 1$ hexo new &apos;my first-blog&apos; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hexo会帮我们在 G:/blogresoft/git/hexo/source/_posts 下生成相关文件，我们只需要打开这个文件就可以开始写博客了。 当然也可以在G:/blogresoft/git/hexo/source/_posts 直接创建后缀为.md的文件。使用命令的好处是帮我们自动生成了时间。 &nbsp;&nbsp;&nbsp;&nbsp;打开文件，除了在文章开头部分的一些参数，比如标题(title:) 、创建时间(date:) 等，正文部分使用Markdown格式书写: 注意：NexT默认主页显示文章的全部内容，这对于有些很长的文章来说非常不美观，建议主页仅显示文章的摘要。 在合适的位置插入以下内容作为分隔符 1$ &lt;!--is more--&gt; 分隔符以前的内容将会在索引页上显示为摘要。 补充内容： Hexo常用命令： npm install hexo -g #安装npm update hexo -g #更新hexo init #初始化hexo publish [layout] #发表草稿。hexo n “name” #新建文章hexo g #生成静态网页hexo p #发表草稿。 hexo s #启动服务hexo d #部署网站 参数：-g 部署之前先生成静态文件。]]></content>
      <categories>
        <category>相关技术</category>
      </categories>
      <tags>
        <tag>搭建个人博客   -相关技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2Fcjlrska18000034nu8def6bfi%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
